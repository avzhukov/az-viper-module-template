{% include 'header' %}

#import <XCTest/XCTest.h>
#import <OCMock/OCMock.h>

#import "{{ prefix }}{{ module_info.name }}Router.h"

@interface {{ prefix }}{{ module_info.name }}RouterTests : XCTestCase

@property (strong, nonatomic) {{ prefix }}{{ module_info.name }}Router *router;
@property (nonatomic, strong) UIViewController<{{ prefix }}{{ module_info.name }}RouterSource> *sourceMock;

@end

@implementation {{ prefix }}{{ module_info.name }}RouterTests

- (void)setUp {
    [super setUp];

    _router = [{{ prefix }}{{ module_info.name }}Router new];
    _sourceMock = OCMClassMock([UIViewController class]);
    _router.source = _sourceMock;
}

- (void)tearDown {

    _router = nil;
    [(id)_sourceMock stopMocking];
    _sourceMock = nil;

    [super tearDown];
}

#pragma mark - {{ prefix }}{{ module_info.name }}RouterInput
- (void)testCloseModuleOnNavigationControllerStack {

    // given
    UINavigationController *mockNavController = OCMClassMock([UINavigationController class]);
    [OCMStub([_sourceMock navigationController]) andReturn:mockNavController];

    // when
    [_router closeModule];

    // then
    OCMVerify([mockNavController popViewControllerAnimated:YES]);
    [(id)mockNavController stopMocking];
    mockNavController = nil;
}

- (void)testCloseModuleWithoutNavigationControllerStack {

    // when
    [_router closeModule];

    // then
    OCMVerify([_sourceMock dismissViewControllerAnimated:YES completion:nil]);
}

- (void)testOpenModuleFromWindow {

    // given
    UIWindow *mockWindow = OCMClassMock([UIWindow class]);

    // when
    [_router openModuleFromWindow:mockWindow];

    // then
    OCMVerify([mockWindow setRootViewController:_sourceMock]);
    [(id)mockWindow stopMocking];
    mockWindow = nil;
}

- (void)testOpenModuleFromViewController {

    // given
    UIViewController *mockViewController = OCMClassMock([UIViewController class]);

    // when
    [_router openModuleFromViewController:mockViewController];

    // then
    OCMVerify([mockViewController presentViewController:_sourceMock animated:YES completion:nil]);
    [(id)mockViewController stopMocking];
    mockViewController = nil;
}

@end
